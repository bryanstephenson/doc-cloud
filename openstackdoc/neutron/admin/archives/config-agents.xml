<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/admin/archives/config-agents.rst">
    <section ids="configure-neutron-agents" names="configure\ neutron\ agents">
        <title>Configure neutron agents</title>
        <paragraph>Plug-ins typically have requirements for particular software that must
            be run on each node that handles data packets. This includes any node
            that runs nova-compute and nodes that run dedicated OpenStack Networking
            service agents such as <literal>neutron-dhcp-agent</literal>, <literal>neutron-l3-agent</literal>,
            <literal>neutron-metering-agent</literal> or <literal>neutron-lbaasv2-agent</literal>.</paragraph>
        <paragraph>A data-forwarding node typically has a network interface with an IP
            address on the management network and another interface on the data
            network.</paragraph>
        <paragraph>This section shows you how to install and configure a subset of the
            available plug-ins, which might include the installation of switching
            software (for example, <literal>Open vSwitch</literal>) and as agents used to communicate
            with the <literal>neutron-server</literal> process running elsewhere in the data center.</paragraph>
        <section ids="configure-data-forwarding-nodes" names="configure\ data-forwarding\ nodes">
            <title>Configure data-forwarding nodes</title>
            <section ids="node-set-up-nsx-plug-in" names="node\ set\ up:\ nsx\ plug-in">
                <title>Node set up: NSX plug-in</title>
                <paragraph>If you use the NSX plug-in, you must also install Open vSwitch on each
                    data-forwarding node. However, you do not need to install an additional
                    agent on each node.</paragraph>
                <warning>
                    <paragraph>It is critical that you run an Open vSwitch version that is
                        compatible with the current version of the NSX Controller software.
                        Do not use the Open vSwitch version that is installed by default on
                        Ubuntu. Instead, use the Open vSwitch version that is provided on
                        the VMware support portal for your NSX Controller version.</paragraph>
                </warning>
                <paragraph><strong>To set up each node for the NSX plug-in</strong></paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Ensure that each data-forwarding node has an IP address on the
                            management network, and an IP address on the data network that is used
                            for tunneling data traffic. For full details on configuring your
                            forwarding node, see the <reference name="NSX Administration Guide" refuri="https://pubs.vmware.com/NSX-62/index.jsp#com.vmware.nsx.admin.doc/GUID-B5C70003-8194-4EC3-AB36-54C848508818.html">NSX Administration Guide</reference>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Use the NSX Administrator Guide to add the node as a Hypervisor
                            by using the NSX Manager GUI. Even if your forwarding node has no
                            VMs and is only used for services agents like <literal>neutron-dhcp-agent</literal>
                            or <literal>neutron-lbaas-agent</literal>, it should still be added to NSX as a
                            Hypervisor.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>After following the NSX Administrator Guide, use the page for this
                            Hypervisor in the NSX Manager GUI to confirm that the node is properly
                            connected to the NSX Controller Cluster and that the NSX Controller
                            Cluster can see the <literal>br-int</literal> integration bridge.</paragraph>
                    </list_item>
                </enumerated_list>
            </section>
        </section>
        <section ids="configure-dhcp-agent" names="configure\ dhcp\ agent">
            <title>Configure DHCP agent</title>
            <paragraph>The DHCP service agent is compatible with all existing plug-ins and is
                required for all deployments where VMs should automatically receive IP
                addresses through DHCP.</paragraph>
            <paragraph><strong>To install and configure the DHCP agent</strong></paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>You must configure the host running the neutron-dhcp-agent as a data
                        forwarding node according to the requirements for your plug-in.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Install the DHCP agent:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install neutron-dhcp-agent</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Update any options in the <literal>/etc/neutron/dhcp_agent.ini</literal> file
                        that depend on the plug-in in use. See the sub-sections.</paragraph>
                    <important>
                        <paragraph>If you reboot a node that runs the DHCP agent, you must run the
                            <literal_strong classes="command">neutron-ovs-cleanup</literal_strong> command before the <literal>neutron-dhcp-agent</literal>
                            service starts.</paragraph>
                        <paragraph>On Red Hat, SUSE, and Ubuntu based systems, the
                            <literal>neutron-ovs-cleanup</literal> service runs the <literal_strong classes="command">neutron-ovs-cleanup</literal_strong>
                            command automatically. However, on Debian-based systems, you
                            must manually run this command or write your own system script
                            that runs on boot before the <literal>neutron-dhcp-agent</literal> service starts.</paragraph>
                    </important>
                </list_item>
            </enumerated_list>
            <paragraph>Networking dhcp-agent can use
                <reference name="dnsmasq" refuri="http://www.thekelleys.org.uk/dnsmasq/doc.html">dnsmasq</reference> driver which
                supports stateful and stateless DHCPv6 for subnets created with
                <literal>--ipv6_address_mode</literal> set to <literal>dhcpv6-stateful</literal> or
                <literal>dhcpv6-stateless</literal>.</paragraph>
            <paragraph>For example:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack subnet create --ip-version 6 --ipv6-ra-mode dhcpv6-stateful \
  --ipv6-address-mode dhcpv6-stateful --network NETWORK --subnet-range \
  CIDR SUBNET_NAME</literal_block>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack subnet create --ip-version 6 --ipv6-ra-mode dhcpv6-stateless \
  --ipv6-address-mode dhcpv6-stateless --network NETWORK --subnet-range \
  CIDR SUBNET_NAME</literal_block>
            <paragraph>If no dnsmasq process for subnet’s network is launched, Networking will
                launch a new one on subnet’s dhcp port in <literal>qdhcp-XXX</literal> namespace. If
                previous dnsmasq process is already launched, restart dnsmasq with a new
                configuration.</paragraph>
            <paragraph>Networking will update dnsmasq process and restart it when subnet gets
                updated.</paragraph>
            <note>
                <paragraph>For dhcp-agent to operate in IPv6 mode use at least dnsmasq v2.63.</paragraph>
            </note>
            <paragraph>After a certain, configured timeframe, networks uncouple from DHCP
                agents when the agents are no longer in use. You can configure the DHCP
                agent to automatically detach from a network when the agent is out of
                service, or no longer needed.</paragraph>
            <paragraph>This feature applies to all plug-ins that support DHCP scaling. For more
                information, see the <reference name="DHCP agent configuration options" refuri="https://docs.openstack.org/ocata/config-reference/networking/networking_options_reference.html#dhcp-agent">DHCP agent configuration
                    options</reference>
                listed in the OpenStack Configuration Reference.</paragraph>
            <section ids="dhcp-agent-setup-ovs-plug-in" names="dhcp\ agent\ setup:\ ovs\ plug-in">
                <title>DHCP agent setup: OVS plug-in</title>
                <paragraph>These DHCP agent options are required in the
                    <literal>/etc/neutron/dhcp_agent.ini</literal> file for the OVS plug-in:</paragraph>
                <literal_block highlight_args="{}" language="bash" linenos="False" xml:space="preserve">[DEFAULT]
enable_isolated_metadata = True
interface_driver = openvswitch</literal_block>
            </section>
            <section ids="dhcp-agent-setup-nsx-plug-in" names="dhcp\ agent\ setup:\ nsx\ plug-in">
                <title>DHCP agent setup: NSX plug-in</title>
                <paragraph>These DHCP agent options are required in the
                    <literal>/etc/neutron/dhcp_agent.ini</literal> file for the NSX plug-in:</paragraph>
                <literal_block highlight_args="{}" language="bash" linenos="False" xml:space="preserve">[DEFAULT]
enable_metadata_network = True
enable_isolated_metadata = True
interface_driver = openvswitch</literal_block>
            </section>
            <section ids="dhcp-agent-setup-linux-bridge-plug-in" names="dhcp\ agent\ setup:\ linux-bridge\ plug-in">
                <title>DHCP agent setup: Linux-bridge plug-in</title>
                <paragraph>These DHCP agent options are required in the
                    <literal>/etc/neutron/dhcp_agent.ini</literal> file for the Linux-bridge plug-in:</paragraph>
                <literal_block highlight_args="{}" language="bash" linenos="False" xml:space="preserve">[DEFAULT]
enabled_isolated_metadata = True
interface_driver = linuxbridge</literal_block>
            </section>
        </section>
        <section ids="configure-l3-agent" names="configure\ l3\ agent">
            <title>Configure L3 agent</title>
            <paragraph>The OpenStack Networking service has a widely used API extension to
                allow administrators and projects to create routers to interconnect L2
                networks, and floating IPs to make ports on private networks publicly
                accessible.</paragraph>
            <paragraph>Many plug-ins rely on the L3 service agent to implement the L3
                functionality. However, the following plug-ins already have built-in L3
                capabilities:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Big Switch/Floodlight plug-in, which supports both the open source
                        <reference name="Floodlight" refuri="http://www.projectfloodlight.org/floodlight/">Floodlight</reference>
                        controller and the proprietary Big Switch controller.</paragraph>
                    <note>
                        <paragraph>Only the proprietary BigSwitch controller implements L3
                            functionality. When using Floodlight as your OpenFlow controller,
                            L3 functionality is not available.</paragraph>
                    </note>
                </list_item>
                <list_item>
                    <paragraph>IBM SDN-VE plug-in</paragraph>
                </list_item>
                <list_item>
                    <paragraph>MidoNet plug-in</paragraph>
                </list_item>
                <list_item>
                    <paragraph>NSX plug-in</paragraph>
                </list_item>
                <list_item>
                    <paragraph>PLUMgrid plug-in</paragraph>
                </list_item>
            </bullet_list>
            <warning>
                <paragraph>Do not configure or use <literal>neutron-l3-agent</literal> if you use one of these
                    plug-ins.</paragraph>
            </warning>
            <paragraph><strong>To install the L3 agent for all other plug-ins</strong></paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Install the <literal>neutron-l3-agent</literal> binary on the network node:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install neutron-l3-agent</literal_block>
                </list_item>
                <list_item>
                    <paragraph>To uplink the node that runs <literal>neutron-l3-agent</literal> to the external network,
                        create a bridge named <literal>br-ex</literal> and attach the NIC for the external
                        network to this bridge.</paragraph>
                    <paragraph>For example, with Open vSwitch and NIC eth1 connected to the external
                        network, run:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># ovs-vsctl add-br br-ex
# ovs-vsctl add-port br-ex eth1</literal_block>
                    <paragraph>When the <literal>br-ex</literal> port is added to the <literal>eth1</literal> interface, external
                        communication is interrupted. To avoid this, edit the
                        <literal>/etc/network/interfaces</literal> file to contain the following information:</paragraph>
                    <literal_block highlight_args="{}" language="shell" linenos="False" xml:space="preserve">## External bridge
auto br-ex
iface br-ex inet static
address 192.27.117.101
netmask 255.255.240.0
gateway 192.27.127.254
dns-nameservers 8.8.8.8

## External network interface
auto eth1
iface eth1 inet manual
up ifconfig $IFACE 0.0.0.0 up
up ip link set $IFACE promisc on
down ip link set $IFACE promisc off
down ifconfig $IFACE down</literal_block>
                    <note>
                        <paragraph>The external bridge configuration address is the external IP address.
                            This address and gateway should be configured in
                            <literal>/etc/network/interfaces</literal>.</paragraph>
                    </note>
                    <paragraph>After editing the configuration, restart <literal>br-ex</literal>:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># ifdown br-ex &amp;&amp; ifup br-ex</literal_block>
                    <paragraph>Do not manually configure an IP address on the NIC connected to the
                        external network for the node running <literal>neutron-l3-agent</literal>. Rather, you
                        must have a range of IP addresses from the external network that can be
                        used by OpenStack Networking for routers that uplink to the external
                        network. This range must be large enough to have an IP address for each
                        router in the deployment, as well as each floating IP.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The <literal>neutron-l3-agent</literal> uses the Linux IP stack and iptables to perform L3
                        forwarding and NAT. In order to support multiple routers with
                        potentially overlapping IP addresses, <literal>neutron-l3-agent</literal> defaults to
                        using Linux network namespaces to provide isolated forwarding contexts.
                        As a result, the IP addresses of routers are not visible simply by running
                        the <literal_strong classes="command">ip addr list</literal_strong> or <literal_strong classes="command">ifconfig</literal_strong> command on the node.
                        Similarly, you cannot directly <literal_strong classes="command">ping</literal_strong> fixed IPs.</paragraph>
                    <paragraph>To do either of these things, you must run the command within a
                        particular network namespace for the router. The namespace has the name
                        <literal>qrouter-ROUTER_UUID</literal>. These example commands run in the router
                        namespace with UUID 47af3868-0fa8-4447-85f6-1304de32153b:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># ip netns exec qrouter-47af3868-0fa8-4447-85f6-1304de32153b ip addr list</literal_block>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># ip netns exec qrouter-47af3868-0fa8-4447-85f6-1304de32153b ping FIXED_IP</literal_block>
                    <important>
                        <paragraph>If you reboot a node that runs the L3 agent, you must run the
                            <literal_strong classes="command">neutron-ovs-cleanup</literal_strong> command before the <literal>neutron-l3-agent</literal>
                            service starts.</paragraph>
                        <paragraph>On Red Hat, SUSE and Ubuntu based systems, the neutron-ovs-cleanup
                            service runs the <literal_strong classes="command">neutron-ovs-cleanup</literal_strong> command
                            automatically. However, on Debian-based systems, you must manually
                            run this command or write your own system script that runs on boot
                            before the neutron-l3-agent service starts.</paragraph>
                    </important>
                </list_item>
            </enumerated_list>
            <paragraph><strong>How routers are assigned to L3 agents</strong>
                By default, a router is assigned to the L3 agent with the least number
                of routers (LeastRoutersScheduler). This can be changed by altering the
                <literal>router_scheduler_driver</literal> setting in the configuration file.</paragraph>
        </section>
        <section ids="configure-metering-agent" names="configure\ metering\ agent">
            <title>Configure metering agent</title>
            <paragraph>The Neutron Metering agent resides beside neutron-l3-agent.</paragraph>
            <paragraph><strong>To install the metering agent and configure the node</strong></paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Install the agent by running:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install neutron-metering-agent</literal_block>
                </list_item>
                <list_item>
                    <paragraph>If you use one of the following plug-ins, you need to configure the
                        metering agent with these lines as well:</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>An OVS-based plug-in such as OVS, NSX, NEC, BigSwitch/Floodlight:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">interface_driver = openvswitch</literal_block>
                        </list_item>
                        <list_item>
                            <paragraph>A plug-in that uses LinuxBridge:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">interface_driver = linuxbridge</literal_block>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>To use the reference implementation, you must set:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">driver = iptables</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Set the <literal>service_plugins</literal> option in the <literal>/etc/neutron/neutron.conf</literal>
                        file on the host that runs <literal>neutron-server</literal>:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">service_plugins = metering</literal_block>
                    <paragraph>If this option is already defined, add <literal>metering</literal> to the list, using a
                        comma as separator. For example:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">service_plugins = router,metering</literal_block>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="configure-load-balancer-as-a-service-lbaas-v2" names="configure\ load-balancer-as-a-service\ (lbaas\ v2)">
            <title>Configure Load-Balancer-as-a-Service (LBaaS v2)</title>
            <paragraph>For the back end, use either <literal>Octavia</literal> or <literal>HAProxy</literal>.
                This example uses Octavia.</paragraph>
            <paragraph><strong>To configure LBaaS V2</strong></paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Install Octavia using your distribution’s package manager.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Edit the <literal>/etc/neutron/neutron_lbaas.conf</literal> file and change
                        the <literal>service_provider</literal> parameter to enable Octavia:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">service_provider = LOADBALANCERV2:Octavia:neutron_lbaas.drivers.octavia.driver.OctaviaDriver:default</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Edit the <literal>/etc/neutron/neutron.conf</literal> file and add the
                        <literal>service_plugins</literal> parameter to enable the load-balancing plug-in:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">service_plugins = neutron_lbaas.services.loadbalancer.plugin.LoadBalancerPluginv2</literal_block>
                    <paragraph>If this option is already defined, add the load-balancing plug-in to
                        the list using a comma as a separator. For example:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">service_plugins = [already defined plugins],neutron_lbaas.services.loadbalancer.plugin.LoadBalancerPluginv2</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create the required tables in the database:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># neutron-db-manage --subproject neutron-lbaas upgrade head</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Restart the <literal>neutron-server</literal> service.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Enable load balancing in the Project section of the dashboard.</paragraph>
                    <warning>
                        <paragraph>Horizon panels are enabled only for LBaaSV1. LBaaSV2 panels are still
                            being developed.</paragraph>
                    </warning>
                    <paragraph>By default, the <literal>enable_lb</literal> option is <literal>True</literal> in the <title_reference>local_settings.py</title_reference>
                        file.</paragraph>
                    <literal_block highlight_args="{}" language="python" linenos="False" xml:space="preserve">OPENSTACK_NEUTRON_NETWORK = {
    'enable_lb': True,
    ...
}</literal_block>
                    <paragraph>Apply the settings by restarting the web server. You can now view the
                        Load Balancer management options in the Project view in the dashboard.</paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="configure-hyper-v-l2-agent" names="configure\ hyper-v\ l2\ agent">
            <title>Configure Hyper-V L2 agent</title>
            <paragraph>Before you install the OpenStack Networking Hyper-V L2 agent on a
                Hyper-V compute node, ensure the compute node has been configured
                correctly using these
                <reference name="instructions" refuri="https://docs.openstack.org/ocata/config-reference/compute/hypervisor-hyper-v.html">instructions</reference>.</paragraph>
            <paragraph><strong>To install the OpenStack Networking Hyper-V agent and configure the node</strong></paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Download the OpenStack Networking code from the repository:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&gt; cd C:\OpenStack\
&gt; git clone https://git.openstack.org/openstack/neutron</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Install the OpenStack Networking Hyper-V Agent:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&gt; cd C:\OpenStack\neutron\
&gt; python setup.py install</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Copy the <literal>policy.json</literal> file:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&gt; xcopy C:\OpenStack\neutron\etc\policy.json C:\etc\</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create the <literal>C:\etc\neutron-hyperv-agent.conf</literal> file and add the proper
                        configuration options and the <reference name="Hyper-V related options" refuri="https://docs.openstack.org/ocata/config-reference/networking/networking_options_reference.html#cloudbase-hyper-v-agent-configuration-options">Hyper-V related
                            options</reference>. Here is a sample config file:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
control_exchange = neutron
policy_file = C:\etc\policy.json
rpc_backend = neutron.openstack.common.rpc.impl_kombu
rabbit_host = IP_ADDRESS
rabbit_port = 5672
rabbit_userid = guest
rabbit_password = &lt;password&gt;
logdir = C:\OpenStack\Log
logfile = neutron-hyperv-agent.log

[AGENT]
polling_interval = 2
physical_network_vswitch_mappings = *:YOUR_BRIDGE_NAME
enable_metrics_collection = true

[SECURITYGROUP]
firewall_driver = hyperv.neutron.security_groups_driver.HyperVSecurityGroupsDriver
enable_security_group = true</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Start the OpenStack Networking Hyper-V agent:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&gt; C:\Python27\Scripts\neutron-hyperv-agent.exe --config-file
C:\etc\neutron-hyperv-agent.conf</literal_block>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="basic-operations-on-agents" names="basic\ operations\ on\ agents">
            <title>Basic operations on agents</title>
            <paragraph>This table shows examples of Networking commands that enable you to
                complete basic operations on agents.</paragraph>
            <table classes="colwidths-given">
                <tgroup cols="2">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="50"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>Operation</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Command</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>List all available agents.</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>$ openstack network agent list</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>Show information of a given agent.</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>$ openstack network agent show AGENT_ID</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>Update the admin status and description for a specified agent. The
                                    command can be used to enable and disable agents by using
                                    <literal>--admin-state-up</literal> parameter set to <literal>False</literal> or <literal>True</literal>.</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>$ neutron agent-update --admin-state-up False AGENT_ID</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>Delete a given agent. Consider disabling the agent before deletion.</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>$ openstack network agent delete AGENT_ID</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><strong>Basic operations on Networking agents</strong></paragraph>
            <paragraph>See the <reference name="OpenStack Command-Line Interface Reference" refuri="https://docs.openstack.org/cli-reference/neutron.html">OpenStack Command-Line Interface
                    Reference</reference>
                for more information on Networking commands.</paragraph>
        </section>
    </section>
</document>
