<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/admin/migration-database.rst">
    <target refid="migration-database"></target>
    <section ids="database migration-database" names="database migration-database">
        <title>Database</title>
        <paragraph>The upgrade of the Networking service database is implemented with Alembic
            migration chains. The migrations in the <literal>alembic/versions</literal> contain the
            changes needed to migrate from older Networking service releases to newer ones.</paragraph>
        <paragraph>Since Liberty, Networking maintains two parallel Alembic migration branches.</paragraph>
        <paragraph>The first branch is called expand and is used to store expansion-only
            migration rules. These rules are strictly additive and can be applied while the
            Neutron server is running.</paragraph>
        <paragraph>The second branch is called contract and is used to store those migration
            rules that are not safe to apply while Neutron server is running.</paragraph>
        <paragraph>The intent of separate branches is to allow invoking those safe migrations
            from the expand branch while the Neutron server is running and therefore
            reducing downtime needed to upgrade the service.</paragraph>
        <paragraph>A database management command-line tool uses the Alembic library to manage the
            migration.</paragraph>
        <section ids="database-management-command-line-tool" names="database\ management\ command-line\ tool">
            <title>Database management command-line tool</title>
            <paragraph>The database management command-line tool is called
                <literal_strong classes="command">neutron-db-manage</literal_strong>. Pass the <literal>--help</literal> option to the tool for
                usage information.</paragraph>
            <paragraph>The tool takes some options followed by some commands:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage &lt;options&gt; &lt;commands&gt;</literal_block>
            <paragraph>The tool needs to access the database connection string, which is provided in
                the <literal>neutron.conf</literal> configuration file in an installation. The tool
                automatically reads from <literal>/etc/neutron/neutron.conf</literal> if it is present.
                If the configuration is in a different location, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage --config-file /path/to/neutron.conf &lt;commands&gt;</literal_block>
            <paragraph>Multiple <literal>--config-file</literal> options can be passed if needed.</paragraph>
            <paragraph>Instead of reading the DB connection from the configuration file(s), you can
                use the <literal>--database-connection</literal> option:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage --database-connection
  mysql+pymysql://root:secret@127.0.0.1/neutron?charset=utf8 &lt;commands&gt;</literal_block>
            <paragraph>The <title_reference>branches</title_reference>, <title_reference>current</title_reference>, and <title_reference>history</title_reference> commands all accept a
                <literal>--verbose</literal> option, which, when passed, will instruct
                <literal_strong classes="command">neutron-db-manage</literal_strong> to display more verbose output for the specified
                command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage current --verbose</literal_block>
            <note>
                <paragraph>The tool usage examples below do not show the options. It is assumed that
                    you use the options that you need for your environment.</paragraph>
            </note>
            <paragraph>In new deployments, you start with an empty database and then upgrade to
                the latest database version using the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade heads</literal_block>
            <paragraph>After installing a new version of the Neutron server, upgrade the database
                using the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade heads</literal_block>
            <paragraph>In existing deployments, check the current database version using the
                following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage current</literal_block>
            <paragraph>To apply the expansion migration rules, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade --expand</literal_block>
            <paragraph>To apply the non-expansive migration rules, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade --contract</literal_block>
            <paragraph>To check if any contract migrations are pending and therefore if offline
                migration is required, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage has_offline_migrations</literal_block>
            <note>
                <paragraph>Offline migration requires all Neutron server instances in the cluster to
                    be shutdown before you apply any contract scripts.</paragraph>
            </note>
            <paragraph>To generate a script of the command instead of operating immediately on the
                database, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade heads --sql

.. note::

   The `--sql` option causes the command to generate a script.  The script
   can be run later (online or offline), perhaps after verifying and/or
   modifying it.</literal_block>
            <paragraph>To migrate between specific migration versions, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade &lt;start version&gt;:&lt;end version&gt;</literal_block>
            <paragraph>To upgrade the database incrementally, use the following command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ neutron-db-manage upgrade --delta &lt;# of revs&gt;</literal_block>
            <note>
                <paragraph>Database downgrade is not supported.</paragraph>
            </note>
            <paragraph>To look for differences between the schema generated by the upgrade command
                and the schema defined by the models, use the
                <literal_strong classes="command">revision --autogenerate</literal_strong> command:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">neutron-db-manage revision -m REVISION_DESCRIPTION --autogenerate</literal_block>
            <note>
                <paragraph>This generates a prepopulated template with the changes needed to match the
                    database state with the models.</paragraph>
            </note>
        </section>
    </section>
</document>
