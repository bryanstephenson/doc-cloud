<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/contributor/internals/ovs_vhostuser.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.


Convention for heading levels in Neutron devref:
=======  Heading 0 (reserved for the title in a document)
-------  Heading 1
~~~~~~~  Heading 2
+++++++  Heading 3
'''''''  Heading 4
(Avoid deeper levels because they do not render well.)</comment>
    <section ids="neutron-open-vswitch-vhost-user-support" names="neutron\ open\ vswitch\ vhost-user\ support">
        <title>Neutron Open vSwitch vhost-user support</title>
        <paragraph>Neutron supports using Open vSwitch + DPDK vhost-user interfaces directly in
            the OVS ML2 driver and agent. The current implementation relies on a multiple
            configuration values and includes runtime verification of Open vSwitch’s
            capability to provide these interfaces.</paragraph>
        <paragraph>The OVS agent detects the capability of the underlying Open vSwitch
            installation and passes that information over RPC via the agent
            ‘configurations’ dictionary. The ML2 driver uses this information to select
            the proper VIF type and binding details.</paragraph>
        <section ids="platform-requirements" names="platform\ requirements">
            <title>Platform requirements</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>OVS 2.4.0+</paragraph>
                </list_item>
                <list_item>
                    <paragraph>DPDK 2.0+</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="configuration" names="configuration">
            <title>Configuration</title>
            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[OVS]
datapath_type=netdev
vhostuser_socket_dir=/var/run/openvswitch</literal_block>
            <paragraph>When OVS is running with DPDK support enabled, and the <literal>datapath_type</literal> is
                set to <literal>netdev</literal>, then the OVS ML2 driver will use the <literal>vhost-user</literal> VIF
                type and pass the necessary binding details to use OVS+DPDK and vhost-user
                sockets. This includes the <literal>vhostuser_socket_dir</literal> setting, which must match
                the directory passed to <literal>ovs-vswitchd</literal> on startup.</paragraph>
        </section>
        <section ids="what-about-the-networking-ovs-dpdk-repo" names="what\ about\ the\ networking-ovs-dpdk\ repo?">
            <title>What about the networking-ovs-dpdk repo?</title>
            <paragraph>The networking-ovs-dpdk repo will continue to exist and undergo active
                development. This feature just removes the necessity for a separate ML2 driver
                and OVS agent in the networking-ovs-dpdk repo. The networking-ovs-dpdk project
                also provides a devstack plugin which also allows automated CI, a Puppet
                module, and an OpenFlow-based security group implementation.</paragraph>
        </section>
    </section>
</document>
