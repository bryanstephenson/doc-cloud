<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/contributor/internals/plugin-api.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.


Convention for heading levels in Neutron devref:
=======  Heading 0 (reserved for the title in a document)
-------  Heading 1
~~~~~~~  Heading 2
+++++++  Heading 3
'''''''  Heading 4
(Avoid deeper levels because they do not render well.)</comment>
    <section ids="neutron-plugin-architecture" names="neutron\ plugin\ architecture">
        <title>Neutron Plugin Architecture</title>
        <paragraph><reference name="Salvatore Orlando: How to write a Neutron Plugin (if you really need to)" refuri="http://www.slideshare.net/salv_orlando/how-to-write-a-neutron-plugin-if-you-really-need-to">Salvatore Orlando: How to write a Neutron Plugin (if you really need to)</reference><target ids="salvatore-orlando-how-to-write-a-neutron-plugin-if-you-really-need-to" names="salvatore\ orlando:\ how\ to\ write\ a\ neutron\ plugin\ (if\ you\ really\ need\ to)" refuri="http://www.slideshare.net/salv_orlando/how-to-write-a-neutron-plugin-if-you-really-need-to"></target></paragraph>
        <section ids="module-neutron.neutron_plugin_base_v2 plugin-api" names="plugin\ api">
            <title>Plugin API</title>
            <index entries="['single',\ 'neutron.neutron_plugin_base_v2\ (module)',\ 'module-neutron.neutron_plugin_base_v2',\ '',\ None]"></index>
            <paragraph>v2 Neutron Plug-in API specification.</paragraph>
            <paragraph><reference internal="True" refid="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2" reftitle="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2"><literal classes="xref py py-class">NeutronPluginBaseV2</literal></reference> provides the definition of minimum set of
                methods that needs to be implemented by a v2 Neutron Plug-in.</paragraph>
            <index entries="['single',\ 'NeutronPluginBaseV2\ (class\ in\ neutron.neutron_plugin_base_v2)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="NeutronPluginBaseV2" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">neutron.neutron_plugin_base_v2.</desc_addname><desc_name xml:space="preserve">NeutronPluginBaseV2</desc_name></desc_signature>
                <desc_content>
                    <index entries="['single',\ 'create_network()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_network',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.create_network" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_network" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_network"><desc_name xml:space="preserve">create_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">network</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a network.</paragraph>
                            <paragraph>Create a network, which represents an L2 network segment which
                                can have a set of subnets and ports associated with it.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">network</literal_strong> – dictionary describing the network, with keys
                                                    as listed in the  <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object
                                                    in <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.  All keys will
                                                    be populated.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_port()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_port',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.create_port" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_port" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_port"><desc_name xml:space="preserve">create_port</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a port.</paragraph>
                            <paragraph>Create a port, which is a connection point of a device (e.g., a VM
                                NIC) to attach to a L2 neutron network.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">port</literal_strong> – dictionary describing the port, with keys as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.  All keys will be
                                                    populated.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_subnet()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_subnet',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.create_subnet" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_subnet" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_subnet"><desc_name xml:space="preserve">create_subnet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">subnet</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a subnet.</paragraph>
                            <paragraph>Create a subnet, which represents a range of IP addresses
                                that can be allocated to devices</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">subnet</literal_strong> – dictionary describing the subnet, with keys
                                                    as listed in the  <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object
                                                    in <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.  All keys will
                                                    be populated.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_subnetpool()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_subnetpool',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.create_subnetpool" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_subnetpool" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.create_subnetpool"><desc_name xml:space="preserve">create_subnetpool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">subnetpool</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a subnet pool.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">subnetpool</literal_strong> – Dictionary representing the subnetpool to create.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete_network()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_network',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.delete_network" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_network" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_network"><desc_name xml:space="preserve">delete_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Delete a network.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the network to delete.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete_port()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_port',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.delete_port" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_port" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_port"><desc_name xml:space="preserve">delete_port</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Delete a port.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the port to delete.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete_subnet()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_subnet',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.delete_subnet" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_subnet" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_subnet"><desc_name xml:space="preserve">delete_subnet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Delete a subnet.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the subnet to delete.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete_subnetpool()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_subnetpool',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.delete_subnetpool" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_subnetpool" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.delete_subnetpool"><desc_name xml:space="preserve">delete_subnetpool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Delete a subnet pool.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – The UUID of the subnet pool to delete.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_network()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_network',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_network" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_network" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_network"><desc_name xml:space="preserve">get_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve a network.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the network to fetch.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">fields</literal_strong> – a list of strings that are valid keys in a
                                                    network dictionary as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Only these fields
                                                    will be returned.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_networks()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_networks" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks"><desc_name xml:space="preserve">get_networks</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter><desc_parameter xml:space="preserve">sorts=None</desc_parameter><desc_parameter xml:space="preserve">limit=None</desc_parameter><desc_parameter xml:space="preserve">marker=None</desc_parameter><desc_parameter xml:space="preserve">page_reverse=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve a list of networks.</paragraph>
                            <paragraph>The contents of the list depends on
                                the identity of the user making the request (as indicated by the
                                context) as well as any filters.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filters</literal_strong> – a dictionary with keys that are valid keys for
                                                    a network as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.  Values in this
                                                    dictionary are an iterable containing values that will
                                                    be used for an exact match comparison for that value.
                                                    Each result returned by this function will have matched
                                                    one of the values for each key in filters.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">fields</literal_strong> – a list of strings that are valid keys in a
                                                    network dictionary as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Only these fields
                                                    will be returned.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_networks_count()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks_count',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_networks_count" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks_count" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks_count"><desc_name xml:space="preserve">get_networks_count</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the number of networks.</paragraph>
                            <paragraph>The result depends on the identity
                                of the user making the request (as indicated by the context) as well
                                as any filters.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filters</literal_strong> – a dictionary with keys that are valid keys for
                                                    a network as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object
                                                    in <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Values in
                                                    this dictionary are an iterable containing values that
                                                    will be used for an exact match comparison for that
                                                    value.  Each result returned by this function will have
                                                    matched one of the values for each key in filters.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <definition_list>
                                <definition_list_item>
                                    <term>NOTE: this method is optional, as it was not part of the originally</term>
                                    <definition>
                                        <paragraph>defined plugin API.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_port()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_port',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_port" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_port" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_port"><desc_name xml:space="preserve">get_port</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve a port.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the port to fetch.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">fields</literal_strong> – a list of strings that are valid keys in a port
                                                    dictionary as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Only these fields
                                                    will be returned.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_ports()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_ports',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_ports" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_ports" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_ports"><desc_name xml:space="preserve">get_ports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter><desc_parameter xml:space="preserve">sorts=None</desc_parameter><desc_parameter xml:space="preserve">limit=None</desc_parameter><desc_parameter xml:space="preserve">marker=None</desc_parameter><desc_parameter xml:space="preserve">page_reverse=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve a list of ports.</paragraph>
                            <paragraph>The contents of the list depends on the identity of the user making
                                the request (as indicated by the context) as well as any filters.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filters</literal_strong> – a dictionary with keys that are valid keys for
                                                    a port as listed in the  <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal>
                                                    object in <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Values
                                                    in this dictionary are an iterable containing values
                                                    that will be used for an exact match comparison for
                                                    that value.  Each result returned by this function will
                                                    have matched one of the values for each key in filters.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">fields</literal_strong> – a list of strings that are valid keys in a
                                                    port dictionary as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Only these fields
                                                    will be returned.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_ports_count()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_ports_count',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_ports_count" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_ports_count" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_ports_count"><desc_name xml:space="preserve">get_ports_count</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the number of ports.</paragraph>
                            <paragraph>The result depends on the identity of the user making the request
                                (as indicated by the context) as well as any filters.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filters</literal_strong> – a dictionary with keys that are valid keys for
                                                    a network as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.  Values in this
                                                    dictionary are an iterable containing values that will
                                                    be used for an exact match comparison for that value.
                                                    Each result returned by this function will have matched
                                                    one of the values for each key in filters.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <note>
                                <paragraph>this method is optional, as it was not part of the originally
                                    defined plugin API.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_subnet()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnet',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_subnet" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnet" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnet"><desc_name xml:space="preserve">get_subnet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve a subnet.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the subnet to fetch.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">fields</literal_strong> – a list of strings that are valid keys in a
                                                    subnet dictionary as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Only these fields
                                                    will be returned.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_subnetpool()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnetpool',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_subnetpool" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnetpool" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnetpool"><desc_name xml:space="preserve">get_subnetpool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Show a subnet pool.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – The UUID of the subnetpool to show.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_subnetpools()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnetpools',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_subnetpools" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnetpools" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnetpools"><desc_name xml:space="preserve">get_subnetpools</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter><desc_parameter xml:space="preserve">sorts=None</desc_parameter><desc_parameter xml:space="preserve">limit=None</desc_parameter><desc_parameter xml:space="preserve">marker=None</desc_parameter><desc_parameter xml:space="preserve">page_reverse=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve list of subnet pools.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_subnets()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnets',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_subnets" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnets" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnets"><desc_name xml:space="preserve">get_subnets</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter><desc_parameter xml:space="preserve">fields=None</desc_parameter><desc_parameter xml:space="preserve">sorts=None</desc_parameter><desc_parameter xml:space="preserve">limit=None</desc_parameter><desc_parameter xml:space="preserve">marker=None</desc_parameter><desc_parameter xml:space="preserve">page_reverse=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve a list of subnets.</paragraph>
                            <paragraph>The contents of the list depends on
                                the identity of the user making the request (as indicated by the
                                context) as well as any filters.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filters</literal_strong> – a dictionary with keys that are valid keys for
                                                    a subnet as listed in the <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal>
                                                    object in <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.
                                                    Values in this dictionary are an iterable containing
                                                    values that will be used for an exact match comparison
                                                    for that value.  Each result returned by this
                                                    function will have matched one of the values for each
                                                    key in filters.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">fields</literal_strong> – a list of strings that are valid keys in a
                                                    subnet dictionary as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>. Only these fields
                                                    will be returned.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_subnets_count()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnets_count',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.get_subnets_count" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnets_count" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_subnets_count"><desc_name xml:space="preserve">get_subnets_count</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the number of subnets.</paragraph>
                            <paragraph>The result depends on the identity of
                                the user making the request (as indicated by the context) as well as
                                any filters.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filters</literal_strong> – a dictionary with keys that are valid keys for
                                                    a network as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.  Values in this
                                                    dictionary are an iterable containing values that
                                                    will be used for an exact match comparison for that
                                                    value.  Each result returned by this function will
                                                    have matched one of the values for each key in filters.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <note>
                                <paragraph>this method is optional, as it was not part of the originally
                                    defined plugin API.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_native_datastore()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.has_native_datastore',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.has_native_datastore" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.has_native_datastore" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.has_native_datastore"><desc_name xml:space="preserve">has_native_datastore</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return True if the plugin uses Neutron’s native datastore.</paragraph>
                            <note>
                                <paragraph>plugins like ML2 should override this method and return True.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'rpc_state_report_workers_supported()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.rpc_state_report_workers_supported',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.rpc_state_report_workers_supported" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.rpc_state_report_workers_supported" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.rpc_state_report_workers_supported"><desc_name xml:space="preserve">rpc_state_report_workers_supported</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return whether the plugin supports state report RPC workers.</paragraph>
                            <note>
                                <paragraph>this method is optional, as it was not part of the originally
                                    defined plugin API.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'rpc_workers_supported()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.rpc_workers_supported',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.rpc_workers_supported" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.rpc_workers_supported" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.rpc_workers_supported"><desc_name xml:space="preserve">rpc_workers_supported</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return whether the plugin supports multiple RPC workers.</paragraph>
                            <paragraph>A plugin that supports multiple RPC workers should override the
                                start_rpc_listeners method to ensure that this method returns True and
                                that start_rpc_listeners is called at the appropriate time.
                                Alternately, a plugin can override this method to customize detection
                                of support for multiple rpc workers</paragraph>
                            <note>
                                <paragraph>this method is optional, as it was not part of the originally
                                    defined plugin API.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'start_rpc_listeners()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.start_rpc_listeners',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.start_rpc_listeners" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.start_rpc_listeners" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.start_rpc_listeners"><desc_name xml:space="preserve">start_rpc_listeners</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Start the RPC listeners.</paragraph>
                            <paragraph>Most plugins start RPC listeners implicitly on initialization.  In
                                order to support multiple process RPC, the plugin needs to expose
                                control over when this is started.</paragraph>
                            <note>
                                <paragraph>this method is optional, as it was not part of the originally
                                    defined plugin API.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'start_rpc_state_reports_listener()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.start_rpc_state_reports_listener',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.start_rpc_state_reports_listener" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.start_rpc_state_reports_listener" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.start_rpc_state_reports_listener"><desc_name xml:space="preserve">start_rpc_state_reports_listener</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Start the RPC listeners consuming state reports queue.</paragraph>
                            <paragraph>This optional method creates rpc consumer for REPORTS queue only.</paragraph>
                            <note>
                                <paragraph>this method is optional, as it was not part of the originally
                                    defined plugin API.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_network()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_network',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.update_network" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_network" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_network"><desc_name xml:space="preserve">update_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">network</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update values of a network.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the network to update.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">network</literal_strong> – dictionary with keys indicating fields to update.
                                                    valid keys are those that have a value of True for
                                                    ‘allow_put’ as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_port()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_port',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.update_port" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_port" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_port"><desc_name xml:space="preserve">update_port</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update values of a port.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the port to update.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">port</literal_strong> – dictionary with keys indicating fields to update.
                                                    valid keys are those that have a value of True for
                                                    ‘allow_put’ as listed in the <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal>
                                                    object in <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_subnet()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_subnet',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.update_subnet" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_subnet" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_subnet"><desc_name xml:space="preserve">update_subnet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">subnet</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update values of a subnet.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">id</literal_strong> – UUID representing the subnet to update.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">subnet</literal_strong> – dictionary with keys indicating fields to update.
                                                    valid keys are those that have a value of True for
                                                    ‘allow_put’ as listed in the
                                                    <literal classes="xref py py-obj">RESOURCE_ATTRIBUTE_MAP</literal> object in
                                                    <literal classes="file" role="file">neutron/api/v2/attributes.py</literal>.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_subnetpool()\ (neutron.neutron_plugin_base_v2.NeutronPluginBaseV2\ method)',\ 'neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_subnetpool',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NeutronPluginBaseV2" first="False" fullname="NeutronPluginBaseV2.update_subnetpool" ids="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_subnetpool" module="neutron.neutron_plugin_base_v2" names="neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.update_subnetpool"><desc_name xml:space="preserve">update_subnetpool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">subnetpool</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update a subnet pool.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">context</literal_strong> – neutron api request context</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">subnetpool</literal_strong> – Dictionary representing the subnetpool attributes
                                                    to update.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
