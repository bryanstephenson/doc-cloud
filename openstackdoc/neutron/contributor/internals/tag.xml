<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/contributor/internals/tag.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.


Convention for heading levels in Neutron devref:
=======  Heading 0 (reserved for the title in a document)
-------  Heading 1
~~~~~~~  Heading 2
+++++++  Heading 3
'''''''  Heading 4
(Avoid deeper levels because they do not render well.)</comment>
    <section ids="add-tags-to-neutron-resources" names="add\ tags\ to\ neutron\ resources">
        <title>Add Tags to Neutron Resources</title>
        <paragraph>Tag service plugin allows users to set tags on their resources. Tagging
            resources can be used by external systems or any other clients of the Neutron
            REST API (and NOT backend drivers).</paragraph>
        <paragraph>The following use cases refer to adding tags to networks, but the same
            can be applicable to any other Neutron resource:</paragraph>
        <enumerated_list enumtype="arabic" prefix="" suffix=")">
            <list_item>
                <paragraph>Ability to map different networks in different OpenStack locations
                    to one logically same network (for Multi site OpenStack)</paragraph>
            </list_item>
            <list_item>
                <paragraph>Ability to map Id’s from different management/orchestration systems to
                    OpenStack networks in mixed environments, for example for project Kuryr,
                    map docker network id to neutron network id</paragraph>
            </list_item>
            <list_item>
                <paragraph>Leverage tags by deployment tools</paragraph>
            </list_item>
            <list_item>
                <paragraph>allow operators to tag information about provider networks
                    (e.g. high-bandwidth, low-latency, etc)</paragraph>
            </list_item>
            <list_item>
                <paragraph>new features like get-me-a-network or a similar port scheduler
                    could choose a network for a port based on tags</paragraph>
            </list_item>
        </enumerated_list>
        <section ids="which-resources" names="which\ resources">
            <title>Which Resources</title>
            <paragraph>Tag system uses standardattr mechanism so it’s targeting to resources that have
                the mechanism. The system is provided by ‘tag’ extension, ‘tag-ext’
                extension, and ‘tagging’ extension. The ‘tag’ extension supports networks only.
                The ‘tag-ext’ extension supports subnets, ports, routers, and subnet pools.
                The ‘tagging’ extension supports resources with standard attribute so it
                means that ‘tag’ and ‘tag-ext’ extensions are unnecessary now. These extensions
                will be removed. Some resources with standard attribute don’t suit fit tag
                support usecases (e.g. security_group_rule). If new tag support resource is
                added, the resource model should inherit HasStandardAttributes and then it must
                implement the property ‘api_parent’ and ‘tag_support’. And also the change
                must include a release note for API user.</paragraph>
            <paragraph>Current API resources extended by tag extensions:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>floatingips</paragraph>
                </list_item>
                <list_item>
                    <paragraph>networks</paragraph>
                </list_item>
                <list_item>
                    <paragraph>policies</paragraph>
                </list_item>
                <list_item>
                    <paragraph>ports</paragraph>
                </list_item>
                <list_item>
                    <paragraph>routers</paragraph>
                </list_item>
                <list_item>
                    <paragraph>security_groups</paragraph>
                </list_item>
                <list_item>
                    <paragraph>subnetpools</paragraph>
                </list_item>
                <list_item>
                    <paragraph>subnets</paragraph>
                </list_item>
                <list_item>
                    <paragraph>trunks</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="model" names="model">
            <title>Model</title>
            <paragraph>Tag is not standalone resource. Tag is always related to existing
                resources. The following shows tag model:</paragraph>
            <literal_block xml:space="preserve">+------------------+        +------------------+
|     Network      |        |       Tag        |
+------------------+        +------------------+
| standard_attr_id +------&gt; | standard_attr_id |
|                  |        | tag              |
|                  |        |                  |
+------------------+        +------------------+</literal_block>
            <paragraph>Tag has two columns only and tag column is just string. These tags are
                defined per resource. Tag is unique in a resource but it can be
                overlapped throughout.</paragraph>
        </section>
        <section ids="api" names="api">
            <title>API</title>
            <paragraph>The following shows basic API for tag. Tag is regarded as a subresource of
                resource so API always includes id of resource related to tag.</paragraph>
            <paragraph>Add a single tag on a network</paragraph>
            <literal_block xml:space="preserve">PUT /v2.0/networks/{network_id}/tags/{tag}</literal_block>
            <paragraph>Returns <title_reference>201 Created</title_reference>. If the tag already exists, no error is raised, it
                just returns the <title_reference>201 Created</title_reference> because the <reference name="OpenStack Development Mailing List" refuri="http://lists.openstack.org/pipermail/openstack-dev/2016-February/087638.html">OpenStack Development Mailing List</reference><target ids="openstack-development-mailing-list" names="openstack\ development\ mailing\ list" refuri="http://lists.openstack.org/pipermail/openstack-dev/2016-February/087638.html"></target>
                discussion told us that PUT should be no issue updating an existing tag.</paragraph>
            <paragraph>Replace set of tags on a network</paragraph>
            <literal_block xml:space="preserve">PUT /v2.0/networks/{network_id}/tags</literal_block>
            <paragraph>with request payload</paragraph>
            <literal_block xml:space="preserve">{
    'tags': ['foo', 'bar', 'baz']
}</literal_block>
            <paragraph>Response</paragraph>
            <literal_block xml:space="preserve">{
    'tags': ['foo', 'bar', 'baz']
}</literal_block>
            <paragraph>Check if a tag exists or not on a network</paragraph>
            <literal_block xml:space="preserve">GET /v2.0/networks/{network_id}/tags/{tag}</literal_block>
            <paragraph>Remove a single tag on a network</paragraph>
            <literal_block xml:space="preserve">DELETE /v2.0/networks/{network_id}/tags/{tag}</literal_block>
            <paragraph>Remove all tags on a network</paragraph>
            <literal_block xml:space="preserve">DELETE /v2.0/networks/{network_id}/tags</literal_block>
            <paragraph>PUT and DELETE for collections are the motivation of <reference name="extending the API framework" refuri="https://review.openstack.org/#/c/284519/">extending the API
                    framework</reference><target ids="extending-the-api-framework" names="extending\ the\ api\ framework" refuri="https://review.openstack.org/#/c/284519/"></target>.</paragraph>
        </section>
    </section>
</document>
