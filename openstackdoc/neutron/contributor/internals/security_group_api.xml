<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/contributor/internals/security_group_api.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.


Convention for heading levels in Neutron devref:
=======  Heading 0 (reserved for the title in a document)
-------  Heading 1
~~~~~~~  Heading 2
+++++++  Heading 3
'''''''  Heading 4
(Avoid deeper levels because they do not render well.)</comment>
    <section ids="guided-tour-the-neutron-security-group-api" names="guided\ tour:\ the\ neutron\ security\ group\ api">
        <title>Guided Tour: The Neutron Security Group API</title>
        <paragraph><reference refuri="https://wiki.openstack.org/wiki/Neutron/SecurityGroups">https://wiki.openstack.org/wiki/Neutron/SecurityGroups</reference></paragraph>
        <section ids="api-extension" names="api\ extension">
            <title>API Extension</title>
            <paragraph>The API extension is the ‘front’ end portion of the code, which handles defining a <reference name="REST-ful API" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/extensions/securitygroup.py">REST-ful API</reference>, which is used by projects.</paragraph>
            <target ids="rest-ful-api" names="rest-ful\ api" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/extensions/securitygroup.py"></target>
        </section>
        <section ids="database-api" names="database\ api">
            <title>Database API</title>
            <paragraph>The Security Group API extension adds a number of <reference name="methods to the database layer" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_db.py">methods to the database layer</reference> of Neutron</paragraph>
            <target ids="methods-to-the-database-layer" names="methods\ to\ the\ database\ layer" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_db.py"></target>
        </section>
        <section ids="agent-rpc" names="agent\ rpc">
            <title>Agent RPC</title>
            <paragraph>This portion of the code handles processing requests from projects, after they have been stored in the database. It involves messaging all the L2 agents
                running on the compute nodes, and modifying the IPTables rules on each hypervisor.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="Plugin RPC classes" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_rpc_base.py">Plugin RPC classes</reference><target ids="plugin-rpc-classes" names="plugin\ rpc\ classes" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_rpc_base.py"></target></paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><reference name="SecurityGroupServerRpcMixin" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_rpc_base.py">SecurityGroupServerRpcMixin</reference><target ids="securitygroupserverrpcmixin" names="securitygroupserverrpcmixin" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_rpc_base.py"></target> - defines the RPC API that the plugin uses to communicate with the agents running on the compute nodes</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>SecurityGroupServerRpcMixin  -  Defines the API methods used to fetch data from the database, in order to return responses to agents via the RPC API</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><reference name="Agent RPC classes" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/api/rpc/handlers/securitygroups_rpc.py">Agent RPC classes</reference><target ids="agent-rpc-classes" names="agent\ rpc\ classes" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/api/rpc/handlers/securitygroups_rpc.py"></target></paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>The SecurityGroupServerRpcApi defines the API methods that can be called by agents, back to the plugin that runs on the Neutron controller</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The SecurityGroupAgentRpcCallbackMixin defines methods that a plugin uses to call back to an agent after performing an action called by an agent.</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="iptables-driver" names="iptables\ driver">
            <title>IPTables Driver</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>prepare_port_filter</literal> takes a <literal>port</literal> argument, which is a <literal>dictionary</literal> object that contains information about the port - including the <literal>security_group_rules</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>prepare_port_filter</literal> appends the port to an internal dictionary, <literal>filtered_ports</literal> which is used to track the internal state.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Each security group has a <reference name="chain" refuri="http://www.thegeekstuff.com/2011/01/iptables-fundamentals/">chain</reference><target ids="chain" names="chain" refuri="http://www.thegeekstuff.com/2011/01/iptables-fundamentals/"></target> in Iptables.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The <literal>IptablesFirewallDriver</literal> has a method to convert security group rules into iptables statements.</paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
