<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/contributor/policies/code-reviews.rst">
    <section ids="neutron-code-reviews" names="neutron\ code\ reviews">
        <title>Neutron Code Reviews</title>
        <paragraph>Code reviews are a critical component of all OpenStack projects. Neutron accepts patches from many
            diverse people with diverse backgrounds, employers, and experience levels. Code reviews provide a
            way to enforce a level of consistency across the project, and also allow for the careful on boarding
            of contributions from new contributors.</paragraph>
        <section ids="neutron-code-review-practices" names="neutron\ code\ review\ practices">
            <title>Neutron Code Review Practices</title>
            <paragraph>Neutron follows the <reference name="code review guidelines" refuri="https://wiki.openstack.org/wiki/ReviewChecklist">code review guidelines</reference><target ids="code-review-guidelines" names="code\ review\ guidelines" refuri="https://wiki.openstack.org/wiki/ReviewChecklist"></target> as
                set forth for all OpenStack projects. It is expected that all reviewers are following the guidelines
                set forth on that page.</paragraph>
            <paragraph>In addition to that, the following rules are to follow:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Any change that requires a new feature from Neutron runtime dependencies
                        requires special review scrutiny to make sure such a change does not break
                        a supported platform (examples of those platforms are latest Ubuntu LTS or
                        CentOS). Runtime dependencies include but are not limited to: kernel, daemons
                        and tools as defined in <literal>oslo.rootwrap</literal> filter files, runlevel management
                        systems, as well as other elements of Neutron execution environment.</paragraph>
                    <note>
                        <paragraph>For some components, the list of supported platforms can be wider than
                            usual. For example, Open vSwitch agent is expected to run successfully in
                            Win32 runtime environment.</paragraph>
                    </note>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>All such changes must be tagged with <literal>UpgradeImpact</literal> in their commit
                                messages.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Reviewers are then advised to make an effort to check if the newly
                                proposed runtime dependency is fulfilled on supported platforms.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Specifically, reviewers and authors are advised to use existing gate and
                                experimental platform specific jobs to validate those patches. To trigger
                                experimental jobs, use the usual protocol (posting <literal>check experimental</literal>
                                comment in Gerrit). CI will then execute and report back a baseline of
                                Neutron tests for platforms of interest and will provide feedback on the
                                effect of the runtime change required.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>If review identifies that the proposed change would break a supported
                                platform, advise to rework the patch so that itâ€™s no longer breaking the
                                platform. One of the common ways of achieving that is gracefully falling
                                back to alternative means on older platforms, another is hiding the new
                                code behind a conditional, potentially controlled with a <literal>oslo.config</literal>
                                option.</paragraph>
                            <note>
                                <paragraph>Neutron team retains the right to remove any platform conditionals in
                                    future releases. Platform owners are expected to accommodate in due
                                    course, or otherwise see their platforms broken. The team also retains
                                    the right to discontinue support for unresponsive platforms.</paragraph>
                            </note>
                        </list_item>
                        <list_item>
                            <paragraph>The change should also include a new <reference name="sanity check" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/cmd/sanity/checks.py">sanity check</reference><target ids="sanity-check" names="sanity\ check" refuri="https://git.openstack.org/cgit/openstack/neutron/tree/neutron/cmd/sanity/checks.py"></target>
                                that would help interested parties to identify their platform limitation
                                in timely manner.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
            </bullet_list>
            <target refid="spec-review-practices"></target>
        </section>
        <section ids="neutron-spec-review-practices spec-review-practices" names="neutron\ spec\ review\ practices spec-review-practices">
            <title>Neutron Spec Review Practices</title>
            <paragraph>In addition to code reviews, Neutron also maintains a BP specification git repository. Detailed
                instructions for the use of this repository are provided <reference name="here" refuri="https://wiki.openstack.org/wiki/Blueprints">here</reference><target ids="here" names="here" refuri="https://wiki.openstack.org/wiki/Blueprints"></target>.
                It is expected that Neutron core team members are actively reviewing specifications which are pushed out
                for review to the specification repository. In addition, there is a neutron-drivers team, composed of a
                handful of Neutron core reviewers, who can approve and merge Neutron specs.</paragraph>
            <paragraph>Some guidelines around this process are provided below:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Once a specification has been pushed, it is expected that it will not be approved for at least 3 days
                        after a first Neutron core reviewer has reviewed it. This allows for additional cores to review the
                        specification.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>For blueprints which the core team deems of High or Critical importance, core reviewers may be assigned
                        based on their subject matter expertise.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Specification priority will be set by the PTL with review by the core team once the specification is
                        approved.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="tracking-review-statistics" names="tracking\ review\ statistics">
            <title>Tracking Review Statistics</title>
            <paragraph>Stackalytics provides some nice interfaces to track review statistics. The links are provided below. These
                statistics are used to track not only Neutron core reviewer statistics, but also to track review statistics
                for potential future core members.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="30 day review stats" refuri="http://stackalytics.com/report/contribution/neutron-group/30">30 day review stats</reference><target ids="day-review-stats" names="30\ day\ review\ stats" refuri="http://stackalytics.com/report/contribution/neutron-group/30"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="60 day review stats" refuri="http://stackalytics.com/report/contribution/neutron-group/60">60 day review stats</reference><target ids="id1" names="60\ day\ review\ stats" refuri="http://stackalytics.com/report/contribution/neutron-group/60"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="90 day review stats" refuri="http://stackalytics.com/report/contribution/neutron-group/90">90 day review stats</reference><target ids="id2" names="90\ day\ review\ stats" refuri="http://stackalytics.com/report/contribution/neutron-group/90"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="180 day review stats" refuri="http://stackalytics.com/report/contribution/neutron-group/180">180 day review stats</reference><target ids="id3" names="180\ day\ review\ stats" refuri="http://stackalytics.com/report/contribution/neutron-group/180"></target></paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
