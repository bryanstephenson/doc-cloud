<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/neutron/doc/source/contributor/stadium/guidelines.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.


Convention for heading levels in Neutron devref:
=======  Heading 0 (reserved for the title in a document)
-------  Heading 1
~~~~~~~  Heading 2
+++++++  Heading 3
'''''''  Heading 4
(Avoid deeper levels because they do not render well.)</comment>
    <section ids="sub-project-guidelines" names="sub-project\ guidelines">
        <title>Sub-Project Guidelines</title>
        <paragraph>This document provides guidance for those who maintain projects that consume
            main neutron or neutron advanced services repositories as a dependency. It is
            not meant to describe projects that are not tightly coupled with Neutron code.</paragraph>
        <section ids="code-reuse" names="code\ reuse">
            <title>Code Reuse</title>
            <paragraph>At all times, avoid using any Neutron symbols that are explicitly marked as
                private (those have an underscore at the start of their names).</paragraph>
            <paragraph>Try to avoid copy pasting the code from Neutron to extend it. Instead, rely on
                enormous number of different plugin entry points provided by Neutron (L2 agent
                extensions, API extensions, service plugins, core plugins, ML2 mechanism
                drivers, etc.)</paragraph>
        </section>
        <section ids="requirements" names="requirements">
            <title>Requirements</title>
            <section ids="neutron-dependency" names="neutron\ dependency">
                <title>Neutron dependency</title>
                <paragraph>Subprojects usually depend on neutron repositories, by using -e git://…
                    schema to define such a dependency. The dependency <emphasis>must not</emphasis> be present in
                    requirements lists though, and instead belongs to tox.ini deps section. This is
                    because next pbr library releases do not guarantee -e git://… dependencies
                    will work.</paragraph>
                <paragraph>You may still put some versioned neutron dependency in your requirements list
                    to indicate the dependency for anyone who packages your subproject.</paragraph>
            </section>
            <section ids="explicit-dependencies" names="explicit\ dependencies">
                <title>Explicit dependencies</title>
                <paragraph>Each neutron project maintains its own lists of requirements. Subprojects that
                    depend on neutron while directly using some of those libraries that neutron
                    maintains as its dependencies must not rely on the fact that neutron will pull
                    the needed dependencies for them. Direct library usage requires that this
                    library is mentioned in requirements lists of the subproject.</paragraph>
                <paragraph>The reason to duplicate those dependencies is that neutron team does not stick
                    to any backwards compatibility strategy in regards to requirements lists, and
                    is free to drop any of those dependencies at any time, breaking anyone who
                    could rely on those libraries to be pulled by neutron itself.</paragraph>
            </section>
            <section ids="automated-requirements-updates" names="automated\ requirements\ updates">
                <title>Automated requirements updates</title>
                <paragraph>At all times, subprojects that use neutron as a dependency should make sure
                    their dependencies do not conflict with neutron’s ones.</paragraph>
                <paragraph>Core neutron projects maintain their requirements lists by utilizing a
                    so-called proposal bot. To keep your subproject in sync with neutron, it is
                    highly recommended that you register your project in
                    openstack/requirements:projects.txt file to enable the bot to update
                    requirements for you.</paragraph>
                <paragraph>Once a subproject opts in global requirements synchronization, it should enable
                    check-requirements jobs in project-config. For example, see <reference name="this patch" refuri="https://review.openstack.org/#/c/215671/">this patch</reference><target ids="this-patch" names="this\ patch" refuri="https://review.openstack.org/#/c/215671/"></target>.</paragraph>
            </section>
        </section>
        <section ids="stable-branches" names="stable\ branches">
            <title>Stable branches</title>
            <paragraph>Stable branches for subprojects should be created at the same time when
                corresponding neutron stable branches are created. This is to avoid situations
                when a postponed cut-off results in a stable branch that contains some patches
                that belong to the next release. This would require reverting patches, and this
                is something you should avoid.</paragraph>
            <paragraph>Make sure your neutron dependency uses corresponding stable branch for neutron,
                not master.</paragraph>
            <paragraph>Note that to keep requirements in sync with core neutron repositories in stable
                branches, you should make sure that your project is registered in
                openstack/requirements:projects.txt <emphasis>for the branch in question</emphasis>.</paragraph>
            <paragraph>Subproject stable branches are supervised by horizontal <reference name="neutron-stable-maint team" refuri="https://review.openstack.org/#/admin/groups/539,members">neutron-stable-maint
                    team</reference><target ids="neutron-stable-maint-team" names="neutron-stable-maint\ team" refuri="https://review.openstack.org/#/admin/groups/539,members"></target>.</paragraph>
            <paragraph>More info on stable branch process can be found on <reference name="the following page" refuri="http://docs.openstack.org/project-team-guide/stable-branches.html">the following page</reference><target ids="the-following-page" names="the\ following\ page" refuri="http://docs.openstack.org/project-team-guide/stable-branches.html"></target>.</paragraph>
        </section>
        <section ids="stable-merge-requirements" names="stable\ merge\ requirements">
            <title>Stable merge requirements</title>
            <paragraph>Merges into stable branches are handled by members of the <reference name="neutron-stable-maint gerrit group" refuri="https://review.openstack.org/#/admin/groups/539,members">neutron-stable-maint
                    gerrit group</reference><target ids="neutron-stable-maint-gerrit-group" names="neutron-stable-maint\ gerrit\ group" refuri="https://review.openstack.org/#/admin/groups/539,members"></target>. The
                reason for this is to ensure consistency among stable branches, and compliance
                with policies for stable backports.</paragraph>
            <paragraph>For sub-projects who participate in the Neutron Stadium effort and who also
                create and utilize stable branches, there is an expectation around what is
                allowed to be merged in these stable branches. The Stadium projects should be
                following the stable branch policies as defined by on the <reference name="Stable Branch wiki" refuri="http://docs.openstack.org/project-team-guide/stable-branches.html">Stable Branch wiki</reference><target ids="stable-branch-wiki" names="stable\ branch\ wiki" refuri="http://docs.openstack.org/project-team-guide/stable-branches.html"></target>. This
                means that, among other things, no features are allowed to be backported into
                stable branches.</paragraph>
            <target refid="guideline-releases"></target>
        </section>
        <section ids="releases guideline-releases" names="releases guideline-releases">
            <title>Releases</title>
            <paragraph>It is suggested that sub-projects cut off new releases from time to time,
                especially for stable branches. It will make the life of packagers and other
                consumers of your code easier.</paragraph>
            <section ids="sub-project-release-process" names="sub-project\ release\ process">
                <title>Sub-Project Release Process</title>
                <paragraph>All subproject releases are managed by <reference name="global OpenStack Release Managers team" refuri="https://review.openstack.org/#/admin/groups/11,members">global OpenStack Release Managers team</reference><target ids="global-openstack-release-managers-team" names="global\ openstack\ release\ managers\ team" refuri="https://review.openstack.org/#/admin/groups/11,members"></target>. The
                    <reference name="neutron-release team" refuri="https://review.openstack.org/#/admin/groups/150,members">neutron-release team</reference><target ids="neutron-release-team" names="neutron-release\ team" refuri="https://review.openstack.org/#/admin/groups/150,members"></target> handles only the
                    following operations:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Make stable branches end of life</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>To release a sub-project, follow the following steps:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>For projects which have not moved to post-versioning, we need to push an
                            alpha tag to avoid pbr complaining. A member of the neutron-release group
                            will handle this.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A sub-project owner should modify setup.cfg to remove the version (if you
                            have one), which moves your project to post-versioning, similar to all the
                            other Neutron projects. You can skip this step if you don’t have a version in
                            setup.cfg.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A sub-project owner <reference name="proposes" refuri="https://git.openstack.org/cgit/openstack/releases/tree/README.rst">proposes</reference><target ids="proposes" names="proposes" refuri="https://git.openstack.org/cgit/openstack/releases/tree/README.rst"></target> a patch
                            to openstack/releases repository with the intended git hash. <reference name="The Neutron release liaison" refuri="https://wiki.openstack.org/wiki/CrossProjectLiaisons#Release_management">The Neutron
                                release liaison</reference><target ids="the-neutron-release-liaison" names="the\ neutron\ release\ liaison" refuri="https://wiki.openstack.org/wiki/CrossProjectLiaisons#Release_management"></target>
                            should be added in Gerrit to the list of reviewers for the patch.</paragraph>
                        <note>
                            <paragraph>New major tag versions should conform to <reference name="SemVer" refuri="http://semver.org/">SemVer</reference><target ids="semver" names="semver" refuri="http://semver.org/"></target>
                                requirements, meaning no year numbers should be used as a major version.
                                The switch to SemVer is advised at earliest convenience for all new major
                                releases.</paragraph>
                        </note>
                        <note>
                            <paragraph>Before Ocata, when releasing the very first release in a stable series, a
                                sub-project owner would need to request a new stable branch creation
                                during Gerrit review, but not anymore. <reference name="See the following email for more details" refuri="http://lists.openstack.org/pipermail/openstack-dev/2016-December/108923.html">See the following email for more
                                    details</reference><target ids="see-the-following-email-for-more-details" names="see\ the\ following\ email\ for\ more\ details" refuri="http://lists.openstack.org/pipermail/openstack-dev/2016-December/108923.html"></target>.</paragraph>
                        </note>
                    </list_item>
                    <list_item>
                        <paragraph>The Neutron release liaison votes with +1 for the openstack/releases patch.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The releases will now be on PyPI. A sub-project owner should verify this by
                            going to an URL similar to
                            <reference name="this" refuri="https://pypi.python.org/simple/networking-odl">this</reference><target ids="this" names="this" refuri="https://pypi.python.org/simple/networking-odl"></target>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A sub-project owner should next go to Launchpad and release this version
                            using the “Release Now” button for the release itself.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If a sub-project uses the “delay-release” option, a sub-project owner should
                            update any bugs that were fixed with this release to “Fix Released” in
                            Launchpad.  This step is not necessary if the sub-project uses the
                            “direct-release” option, which is the default.  <footnote_reference auto="1" ids="id1" refid="jeepyb-release-options">1</footnote_reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The new release will be available on <reference name="OpenStack Releases" refuri="http://docs.openstack.org/releases/">OpenStack Releases</reference><target ids="openstack-releases" names="openstack\ releases" refuri="http://docs.openstack.org/releases/"></target>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A sub-project owner should add the next milestone to the Launchpad series, or
                            if a new series is required, create the new series and a new milestone.</paragraph>
                    </list_item>
                </bullet_list>
                <note>
                    <paragraph>You need to be careful when picking a git commit to base new releases on.
                        In most cases, you’ll want to tag the <emphasis>merge</emphasis> commit that merges your last
                        commit in to the branch.  <reference anonymous="1" name="This bug" refuri="https://bugs.launchpad.net/neutron/+bug/1540633">This bug</reference> shows an instance where this mistake
                        was caught.  Notice the difference between the <reference anonymous="1" name="incorrect commit" refuri="https://github.com/openstack/networking-infoblox/commit/6191994515">incorrect commit</reference> and the
                        <reference anonymous="1" name="correct one" refuri="https://github.com/openstack/networking-infoblox/commit/22dd683e1a">correct one</reference> which is the merge commit.  <literal>git log 6191994..22dd683
--oneline</literal> shows that the first one misses a handful of important commits
                        that the second one catches.  This is the nature of merging to master.</paragraph>
                </note>
                <target anonymous="1" ids="id2" refuri="https://bugs.launchpad.net/neutron/+bug/1540633"></target>
                <target anonymous="1" ids="id3" refuri="https://github.com/openstack/networking-infoblox/commit/6191994515"></target>
                <target anonymous="1" ids="id4" refuri="https://github.com/openstack/networking-infoblox/commit/22dd683e1a"></target>
                <paragraph>To make a branch end of life, follow the following steps:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>A member of neutron-release will abandon all open change reviews on
                            the branch.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A member of neutron-release will push an EOL tag on the branch.
                            (eg. “icehouse-eol”)</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A sub-project owner should request the infrastructure team to delete
                            the branch by sending an email to the infrastructure mailing list, not by
                            bothering the infrastructure team on IRC.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A sub-project owner should tweak jenkins jobs in project-config if any.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="references" names="references">
                <title>References</title>
                <footnote auto="1" backrefs="id1" ids="jeepyb-release-options" names="jeepyb_release_options">
                    <label>1</label>
                    <paragraph><reference refuri="http://lists.openstack.org/pipermail/openstack-dev/2015-December/081724.html">http://lists.openstack.org/pipermail/openstack-dev/2015-December/081724.html</reference></paragraph>
                </footnote>
            </section>
        </section>
    </section>
</document>
