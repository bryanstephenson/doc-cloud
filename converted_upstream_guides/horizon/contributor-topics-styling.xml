<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Styling in Horizon (SCSS)</title>
  <para>Horizon uses <link xlink:href="http://sass-lang.com/guide">SCSS</link> (not to be confused with Sass) to style its HTML. This
            guide is targeted at developers adding code to upstream Horizon. For
            information on creating your own branding/theming, see
            <xref linkend="install-customizing"/>.</para>
  <section>
    <title>Code Layout</title>
    <para>The base SCSS can be found at <literal>openstack_dashboard/static/dashboard/scss/</literal>.
                This directory should <emphasis role="bold">only</emphasis> contain the minimal styling for functionality
                code that isn’t configurable by themes. <literal>horizon.scss</literal> is a top level file
                that imports from the <literal>components/</literal> directory, as well as other base styling
                files; potentially some basic page layout rules that Horizon relies on to
                function.</para>
    <note>
      <para>Currently, a great deal of theming is also kept in the <literal>horizon.scss</literal> file
                    in this directory, but that will be reduced as we proceed with the new code
                    design.</para>
    </note>
    <para>Horizon’s <literal>default</literal> theme stylesheets can be found at
                <literal>openstack_dashboard/themes/default/</literal>.</para>
    <screen>├── _styles.scss
├── _variables.scss
├── bootstrap/
    └── ...
└── horizon/
    └── ...</screen>
    <para>The top level <literal>_styles.scss</literal> and <literal>_variables.scss</literal> contain imports from
                the <literal>bootstrap</literal> and <literal>horizon</literal> directories.</para>
    <section>
      <title>The “bootstrap” directory</title>
      <para>This directory contains overrides and customization of Bootstrap variables, and
                    markup used by Bootstrap components. This should <emphasis role="bold">only</emphasis> override existing
                    Bootstrap content. For examples of these components, see the
                    <xref linkend="theme-preview-panel"/>.</para>
      <screen>bootstrap/
├── _styles.scss
├── _variables.scss
└── components/
    ├── _component_0.scss
    ├── _component_1.scss
    └── ...</screen>
      <itemizedlist>
        <listitem>
          <para><literal>_styles.scss</literal> imports the SCSS defined for each component.</para>
        </listitem>
        <listitem>
          <para><literal>_variables.scss</literal> contains the definitions for every Bootstrap variable.
                            These variables can be altered to affect the look and feel of Horizon’s
                            default theme.</para>
        </listitem>
        <listitem>
          <para>The <literal>components</literal> directory contains overrides for Bootstrap components,
                            such as tables or navbars.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>The “horizon” directory</title>
      <para>This directory contains SCSS that is absolutely specific to Horizon; code here
                    should <emphasis role="bold">not</emphasis> override existing Bootstrap content, such as variables and rules.</para>
      <screen>horizon/
├── _styles.scss
├── _variables.scss
└── components/
    ├── _component_0.scss
    ├── _component_1.scss
    └── ...</screen>
      <itemizedlist>
        <listitem>
          <para><literal>_styles.scss</literal> imports the SCSS defined for each component. It may also
                            contain some minor styling overrides.</para>
        </listitem>
        <listitem>
          <para><literal>_variables.scss</literal> contains variable definitions that are specific to the
                            horizon theme. This should <emphasis role="bold">not</emphasis> override any bootstrap variables, only
                            define new ones. You can however, inherit bootstrap variables for reuse
                            (and are encouraged to do so where possible).</para>
        </listitem>
        <listitem>
          <para>The <literal>components</literal> directory contains styling for each individual component
                            defined by Horizon, such as the sidebar or pie charts.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section>
    <title>Adding new SCSS</title>
    <para>To keep Horizon easily themable, there are several code design guidelines that
                should be adhered to:</para>
    <itemizedlist>
      <listitem>
        <para>Reuse Bootstrap variables where possible. This allows themes to influence
                        styling by simply overriding a few existing variables, instead of rewriting
                        large chunks of the SCSS files.</para>
      </listitem>
      <listitem>
        <para>If you are unable to use existing variables - such as for very specific
                        functionality - keep the new rules as specific as possible to your component
                        so they do not cause issues in unexpected places.</para>
      </listitem>
      <listitem>
        <para>Check if existing components suit your use case. There may be existing
                        components defined by Bootstrap or Horizon that can be reused, rather than
                        writing new ones.</para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="theme-preview-panel">
    <title>Theme Preview Panel</title>
    <para>The Bootstrap Theme Preview panel contains examples of all stock Bootstrap
                markup with the currently applied theme, as well as source code for replicating
                them; click the <literal>&lt;/&gt;</literal> symbol when hovering over a component.</para>
    <para>To enable the Developer dashboard with the Theme Preview panel:</para>
    <procedure>
      <step>
        <para>Set <xref linkend="debug-setting"/> setting to <literal>True</literal>.</para>
      </step>
      <step>
        <para>Copy <literal>_9001_developer.py</literal> and <literal>_9010_preview.py</literal> from
                        <literal>openstack_dashboard/contrib/developer/enabled/</literal> to
                        <literal>openstack_dashboard/local/enabled/</literal>.</para>
      </step>
      <step>
        <para>Restart the web server.</para>
      </step>
    </procedure>
  </section>
  <section>
    <title>Alternate Theme</title>
    <para>A second theme is provided by default at
                <literal>openstack_dashboard/themes/material/</literal>. When adding new SCSS to horizon, you
                should check that it does not interfere with the Material theme. Images of how
                the Material theme should look can be found at <link xlink:href="https://bootswatch.com/paper/"/>.
                This theme is now configured to run as the alternate theme within Horizon.</para>
  </section>
</section>
