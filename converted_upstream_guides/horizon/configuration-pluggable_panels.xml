<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1" xml:id="pluggable-settings-label">
  <title>Pluggable Panels and Groups</title>
  <section>
    <title>Introduction</title>
    <para>Horizon allows dashboards, panels and panel groups to be added without
                modifying the default settings. Pluggable settings are a mechanism to allow
                settings to be stored in separate files.  Those files are read at startup and
                used to modify the default settings.</para>
    <para>The default location for the dashboard configuration files is
                <literal>openstack_dashboard/enabled</literal>, with another directory,
                <literal>openstack_dashboard/local/enabled</literal> for local overrides. Both sets of files
                will be loaded, but the settings in <literal>openstack_dashboard/local/enabled</literal> will
                overwrite the default ones. The settings are applied in alphabetical order of
                the filenames. If the same dashboard has configuration files in <literal>enabled</literal> and
                <literal>local/enabled</literal>, the local name will be used. Note, that since names of
                python modules can’t start with a digit, the files are usually named with a
                leading underscore and a number, so that you can control their order easily.</para>
  </section>
  <section>
    <title>General Pluggbale Settings</title>
    <para>Before we describe the specific use cases, the following keys can be used in
                any pluggable settings file:</para>
    <section>
      <title>
        <literal>ADD_EXCEPTIONS</literal>
      </title>
      <para>A dictionary of exception classes to be added to <literal>HORIZON['exceptions']</literal>.</para>
    </section>
    <section>
      <title>
        <literal>ADD_INSTALLED_APPS</literal>
      </title>
      <para>A list of applications to be prepended to <literal>INSTALLED_APPS</literal>.
                    This is needed to expose static files from a plugin.</para>
    </section>
    <section>
      <title>
        <literal>ADD_ANGULAR_MODULES</literal>
      </title>
      <para>A list of AngularJS modules to be loaded when Angular bootstraps. These modules
                    are added as dependencies on the root Horizon application <literal>horizon</literal>.</para>
    </section>
    <section>
      <title>
        <literal>ADD_JS_FILES</literal>
      </title>
      <para>A list of javascript source files to be included in the compressed set of files
                    that are loaded on every page. This is needed for AngularJS modules that are
                    referenced in <literal>ADD_ANGULAR_MODULES</literal> and therefore need to be included in
                    every page.</para>
    </section>
    <section>
      <title>
        <literal>ADD_JS_SPEC_FILES</literal>
      </title>
      <para>A list of javascript spec files to include for integration with the Jasmine
                    spec runner. Jasmine is a behavior-driven development framework for testing
                    JavaScript code.</para>
    </section>
    <section>
      <title>
        <literal>ADD_SCSS_FILES</literal>
      </title>
      <para>A list of scss files to be included in the compressed set of files that are
                    loaded on every page. We recommend one scss file per dashboard, use @import if
                    you need to include additional scss files for panels.</para>
    </section>
    <section xml:id="auto-discover-static-files">
      <title>
        <literal>AUTO_DISCOVER_STATIC_FILES</literal>
      </title>
      <para>If set to <literal>True</literal>, JavaScript files and static angular html template files
                    will be automatically discovered from the <literal>static</literal> folder in each apps listed
                    in ADD_INSTALLED_APPS.</para>
      <para>JavaScript source files will be ordered based on naming convention: files with
                    extension <literal>.module.js</literal> listed first, followed by other JavaScript source files.</para>
      <para>JavaScript files for testing will also be ordered based on naming convention:
                    files with extension <literal>.mock.js</literal> listed first, followed by files with extension
                    <literal>.spec.js</literal>.</para>
      <para>If ADD_JS_FILES and/or ADD_JS_SPEC_FILES are also specified, files manually
                    listed there will be appended to the auto-discovered files.</para>
    </section>
    <section>
      <title>
        <literal>DISABLED</literal>
      </title>
      <para>If set to <literal>True</literal>, this settings file will not be added to the settings.</para>
    </section>
    <section>
      <title>
        <literal>UPDATE_HORIZON_CONFIG</literal>
      </title>
      <para>A dictionary of values that will replace the values in <literal>HORIZON_CONFIG</literal>.</para>
    </section>
  </section>
  <section>
    <title>Pluggable Settings for Dashboards</title>
    <para>The following keys are specific to registering a dashboard:</para>
    <section>
      <title>
        <literal>DASHBOARD</literal>
      </title>
      <para>The slug of the dashboard to be added to <literal>HORIZON['dashboards']</literal>. Required.</para>
    </section>
    <section>
      <title>
        <literal>DEFAULT</literal>
      </title>
      <para>If set to <literal>True</literal>, this dashboard will be set as the default dashboard.</para>
    </section>
    <section xml:id="examples">
      <title>Examples</title>
      <para>To disable a dashboard locally, create a file
                    <literal>openstack_dashboard/local/enabled/_40_dashboard-name.py</literal> with the following
                    content:</para>
      <screen>DASHBOARD = '&lt;dashboard-name&gt;'
DISABLED = True</screen>
      <para>To add a Tuskar-UI (Infrastructure) dashboard, you have to install it, and then
                    create a file <literal>openstack_dashboard/local/enabled/_50_tuskar.py</literal> with:</para>
      <screen>from tuskar_ui import exceptions

DASHBOARD = 'infrastructure'
ADD_INSTALLED_APPS = [
    'tuskar_ui.infrastructure',
]
ADD_EXCEPTIONS = {
    'recoverable': exceptions.RECOVERABLE,
    'not_found': exceptions.NOT_FOUND,
    'unauthorized': exceptions.UNAUTHORIZED,
}</screen>
    </section>
  </section>
  <section>
    <title>Pluggable Settings for Panels</title>
    <para>The following keys are specific to registering or removing a panel:</para>
    <section>
      <title>
        <literal>PANEL</literal>
      </title>
      <para>The slug of the panel to be added to <literal>HORIZON_CONFIG</literal>. Required.</para>
    </section>
    <section>
      <title>
        <literal>PANEL_DASHBOARD</literal>
      </title>
      <para>The slug of the dashboard the <literal>PANEL</literal> associated with. Required.</para>
    </section>
    <section>
      <title>
        <literal>PANEL_GROUP</literal>
      </title>
      <para>The slug of the panel group the <literal>PANEL</literal> is associated with. If you want the
                    panel to show up without a panel group, use the panel group “default”.</para>
    </section>
    <section>
      <title>
        <literal>DEFAULT_PANEL</literal>
      </title>
      <para>If set, it will update the default panel of the <literal>PANEL_DASHBOARD</literal>.</para>
    </section>
    <section>
      <title>
        <literal>ADD_PANEL</literal>
      </title>
      <para>Python panel class of the <literal>PANEL</literal> to be added.</para>
    </section>
    <section>
      <title>
        <literal>REMOVE_PANEL</literal>
      </title>
      <para>If set to <literal>True</literal>, the PANEL will be removed from PANEL_DASHBOARD/PANEL_GROUP.</para>
    </section>
    <section>
      <title>Examples</title>
      <para>To add a new panel to the Admin panel group in Admin dashboard, create a file
                    <literal>openstack_dashboard/local/enabled/_60_admin_add_panel.py</literal> with the following
                    content:</para>
      <screen>PANEL = 'plugin_panel'
PANEL_DASHBOARD = 'admin'
PANEL_GROUP = 'admin'
ADD_PANEL = 'test_panels.plugin_panel.panel.PluginPanel'</screen>
      <para>To remove Info panel from Admin panel group in Admin dashboard locally, create
                    a file <literal>openstack_dashboard/local/enabled/_70_admin_remove_panel.py</literal> with
                    the following content:</para>
      <screen>PANEL = 'info'
PANEL_DASHBOARD = 'admin'
PANEL_GROUP = 'admin'
REMOVE_PANEL = True</screen>
      <para>To change the default panel of Admin dashboard to Instances panel, create a
                    file <literal>openstack_dashboard/local/enabled/_80_admin_default_panel.py</literal> with the
                    following content:</para>
      <screen>PANEL = 'instances'
PANEL_DASHBOARD = 'admin'
PANEL_GROUP = 'admin'
DEFAULT_PANEL = 'instances'</screen>
    </section>
  </section>
  <section>
    <title>Pluggable Settings for Panel Groups</title>
    <para>The following keys are specific to registering a panel group:</para>
    <section>
      <title>
        <literal>PANEL_GROUP</literal>
      </title>
      <para>The slug of the panel group to be added to <literal>HORIZON_CONFIG</literal>. Required.</para>
    </section>
    <section>
      <title>
        <literal>PANEL_GROUP_NAME</literal>
      </title>
      <para>The display name of the PANEL_GROUP. Required.</para>
    </section>
    <section>
      <title>
        <literal>PANEL_GROUP_DASHBOARD</literal>
      </title>
      <para>The slug of the dashboard the <literal>PANEL_GROUP</literal> associated with. Required.</para>
    </section>
    <section>
      <title>Examples</title>
      <para>To add a new panel group to the Admin dashboard, create a file
                    <literal>openstack_dashboard/local/enabled/_90_admin_add_panel_group.py</literal> with the
                    following content:</para>
      <screen>PANEL_GROUP = 'plugin_panel_group'
PANEL_GROUP_NAME = 'Plugin Panel Group'
PANEL_GROUP_DASHBOARD = 'admin'</screen>
    </section>
  </section>
</section>
